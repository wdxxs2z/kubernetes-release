#!/bin/bash

<%
   def discover_external_ip
     networks = spec.networks.marshal_dump

     _, network = networks.find do |_name, network_spec|
       network_spec.default
     end

     if !network
       _, network = networks.first
     end

     if !network
       raise "Could not determine IP via network spec: #{networks}"
     end

     network.ip
   end
%>

RUN_DIR=/var/vcap/sys/run/kubelet
PIDFILE=${RUN_DIR}/kubelet.pid
JOB_DIR=/var/vcap/jobs/kubelet
CERT_DIR=${RUN_DIR}/certs

source /var/vcap/packages/common/utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "kubelet"

    mkdir -p $CERT_DIR
    chown -R vcap:vcap $RUN_DIR

    echo $$ > $PIDFILE

    <% my_ip = discover_external_ip %>
    exec chpst -u vcap:vcap /var/vcap/packages/kubernetes/kubelet \
--address=<%= my_ip %> \
--port=10250 \
--hostname_override=<%= my_ip %> \
--api-servers=http://<%= p('apiserver.host') %>:8080 \
--cert-dir=$CERT_DIR \
--logtostderr=true \
--docker-endpoint=unix:///var/vcap/sys/run/docker/docker.sock \
--root-dir=/var/vcap/sys/run/kubelet \
--pod-infra-container-image="index.tenxcloud.com/google_containers/pause:3.0" \
--cluster_dns=10.0.0.10 \
--cluster_domain=cluster.local
    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: kubelet_ctl {start|stop}"

    ;;

esac
